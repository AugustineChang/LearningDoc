3.1
%eax = 0x100
0x104 = 0xAB
$0x108 = 0x108
(%eax) = 0xFF
4(%eax) = M[ 0x100 + 0x4 ] = 0xAB
9(%eax,%edx) = M[ 0x100 + 0x3 + 0x9 ] = 0x11
260( $ecx,%edx ) = M[ 0x1 + 0x3 + 260(0x104) ] = 0x13
0xFC(,%ecx,4) = M[ 0x1 * 4 + 0xFC ] = 0xFF
(%eax,%edx,4) = M[ 0x100 + 0x3 * 4 ] = 0x11

3.2
movl %eax, (%esp)
movw (%eax), %dx
movb $0xFF, %bl
movb (%esp,%edx,40), %dh
pushl $0xFF
movw %dx, (%eax)
popl %edi

3.3
1.存储器地址是32位的 不能用8位寄存器访问存储器
2.movl 指明要移动32位数据 而%ax是16位数据
3.移动数据 不能从存储器到存储器
4.%sh 不存在这个存储器
5.立即数不是存储位置 不能作为mov的目标
6.大数据向小数据移动 应该用 movz 或 movs
7.%si 是16位寄存器 所以命令应该用movw

3.4
movsbl %al, (%edx)
movzbl %al, (%edx)
movzbl %al, (%edx)
movb %al, (%dl)
movb %al, (%dl)
