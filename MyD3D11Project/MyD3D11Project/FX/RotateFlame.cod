//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerFrame
{
    DirectionalLight gDirectLight;      // Offset:    0, size:   64
    float3  gCameraPosW;                // Offset:   64, size:   12
}

cbuffer cbPerObject
{
    float4x4 gWVP;                      // Offset:    0, size:   64
    float4x4 gWorld;                    // Offset:   64, size:   64
    float4x4 gWorldNormal;              // Offset:  128, size:   64
    float4x4 gTexTransform;             // Offset:  192, size:   64
    Material gMaterial;                 // Offset:  256, size:   48
}

//
// 3 local object(s)
//
Texture2D diffuseTex;
Texture2D diffuseAlphaTex;
SamplerState linearSampler
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 4 technique(s)
    //
    technique11 LightTech_Lit_Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWVP;                     // Offset:    0 Size:    64
                //   float4x4 gWorld;                   // Offset:   64 Size:    64
                //   float4x4 gWorldNormal;             // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  256
                //       float4 diffuse;                // Offset:  272
                //       float4 specular;               // Offset:  288
                //
                //   } gMaterial;                       // Offset:  256 Size:    48 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerObject                       cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // COLOR                    0   xyzw        3     NONE   float   xyzw
                // TEXCOORD                 0   xy          4     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyzw
                dcl_output o4.xy
                dcl_temps 6
                //
                // Initial variable locations:
                //   v0.x <- vin.posL.x; v0.y <- vin.posL.y; v0.z <- vin.posL.z; 
                //   v1.x <- vin.normalL.x; v1.y <- vin.normalL.y; v1.z <- vin.normalL.z; 
                //   v2.x <- vin.texcoord.x; v2.y <- vin.texcoord.y; 
                //   o4.x <- <VS return value>.tex.x; o4.y <- <VS return value>.tex.y; 
                //   o3.x <- <VS return value>.color.x; o3.y <- <VS return value>.color.y; o3.z <- <VS return value>.color.z; o3.w <- <VS return value>.color.w; 
                //   o2.x <- <VS return value>.normalW.x; o2.y <- <VS return value>.normalW.y; o2.z <- <VS return value>.normalW.z; 
                //   o1.x <- <VS return value>.posW.x; o1.y <- <VS return value>.posW.y; o1.z <- <VS return value>.posW.z; 
                //   o0.x <- <VS return value>.posH.x; o0.y <- <VS return value>.posH.y; o0.z <- <VS return value>.posH.z; o0.w <- <VS return value>.posH.w
                //
                #line 51 "D:\Projects\LearningDoc\MyD3D11Project\MyD3D11Project\FX\RotateFlame.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.posH.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.posH.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.posH.z
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // r1.w <- vout.posH.w
                
                #line 52
                dp4 r2.x, r0.xyzw, cb0[4].xyzw  // r2.x <- vout.posW.x
                dp4 r2.y, r0.xyzw, cb0[5].xyzw  // r2.y <- vout.posW.y
                dp4 r2.z, r0.xyzw, cb0[6].xyzw  // r2.z <- vout.posW.z
                
                #line 53
                dp3 r0.x, v1.xyzx, cb0[8].xyzx  // r0.x <- vout.normalW.x
                dp3 r0.y, v1.xyzx, cb0[9].xyzx  // r0.y <- vout.normalW.y
                dp3 r0.z, v1.xyzx, cb0[10].xyzx  // r0.z <- vout.normalW.z
                
                #line 54
                mov r3.xyz, v1.xyzx  // r3.x <- vout.color.x; r3.y <- vout.color.y; r3.z <- vout.color.z
                mov r3.w, l(1.000000)  // r3.w <- vout.color.w
                
                #line 55
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // r5.x <- vout.tex.x
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // r5.y <- vout.tex.y
                
                #line 57
                mov o0.xyzw, r1.xyzw
                mov o3.xyzw, r3.xyzw
                mov o1.xyz, r2.xyzx
                mov o2.xyz, r0.xyzx
                mov o4.xy, r5.xyxx
                ret 
                // Approximately 24 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float3 direction;              // Offset:    0
                //       float pad;                     // Offset:   12
                //       float4 ambientColor;           // Offset:   16
                //       float4 diffuseColor;           // Offset:   32
                //       float4 specularColor;          // Offset:   48
                //
                //   } gDirectLight;                    // Offset:    0 Size:    64
                //   float3 gCameraPosW;                // Offset:   64 Size:    12
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWVP;                     // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorld;                   // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldNormal;             // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  256
                //       float4 diffuse;                // Offset:  272
                //       float4 specular;               // Offset:  288
                //
                //   } gMaterial;                       // Offset:  256 Size:    48
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // linearSampler                     sampler      NA          NA             s0      1 
                // diffuseTex                        texture  float4          2d             t0      1 
                // diffuseAlphaTex                   texture  float4          2d             t1      1 
                // cbPerFrame                        cbuffer      NA          NA            cb0      1 
                // cbPerObject                       cbuffer      NA          NA            cb1      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // COLOR                    0   xyzw        3     NONE   float       
                // TEXCOORD                 0   xy          4     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[5], immediateIndexed
                dcl_constantbuffer CB1[19], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 11
                //
                // Initial variable locations:
                //   v0.x <- v2p.posH.x; v0.y <- v2p.posH.y; v0.z <- v2p.posH.z; v0.w <- v2p.posH.w; 
                //   v1.x <- v2p.posW.x; v1.y <- v2p.posW.y; v1.z <- v2p.posW.z; 
                //   v2.x <- v2p.normalW.x; v2.y <- v2p.normalW.y; v2.z <- v2p.normalW.z; 
                //   v3.x <- v2p.color.x; v3.y <- v2p.color.y; v3.z <- v2p.color.z; v3.w <- v2p.color.w; 
                //   v4.x <- v2p.tex.x; v4.y <- v2p.tex.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 67 "D:\Projects\LearningDoc\MyD3D11Project\MyD3D11Project\FX\RotateFlame.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyz, v4.xyxx, t0.xyzw, s0
                mov r0.xyz, r0.xyzx  // r0.x <- texCol.x; r0.y <- texCol.y; r0.z <- texCol.z
                
                #line 68
                sample_indexable(texture2d)(float,float,float,float) r1.xyz, v4.xyxx, t1.xyzw, s0
                mov r1.xyz, r1.xyzx  // r1.x <- texAlphaCol.x; r1.y <- texAlphaCol.y; r1.z <- texAlphaCol.z
                
                #line 69
                mul r0.xyz, r0.xyzx, r1.xyzx
                
                #line 74
                dp3 r0.w, v2.xyzx, v2.xyzx
                rsq r0.w, r0.w
                mul r1.xyz, r0.wwww, v2.xyzx  // r1.x <- v2p.normalW.x; r1.y <- v2p.normalW.y; r1.z <- v2p.normalW.z
                
                #line 75
                mov r2.xyz, -v1.xyzx
                add r2.xyz, r2.xyzx, cb0[4].xyzx
                dp3 r0.w, r2.xyzx, r2.xyzx
                rsq r0.w, r0.w
                mul r2.xyz, r0.wwww, r2.xyzx  // r2.x <- viewW.x; r2.y <- viewW.y; r2.z <- viewW.z
                
                #line 81
                nop 
                mov r3.xyz, cb0[0].xyzx
                mov r4.xyz, cb0[1].xyzx
                mov r5.xyz, cb0[2].xyzx
                mov r6.xyz, cb0[3].xyzx
                mov r7.xyz, cb1[16].xyzx
                mov r8.xyz, cb1[17].xyzx
                mov r9.xyzw, cb1[18].xyzw
                mov r10.xyz, l(1.000000,1.000000,1.000000,0)
                mov r1.xyz, r1.xyzx
                mov r2.xyz, r2.xyzx
                
                #line 55 "D:\Projects\LearningDoc\MyD3D11Project\MyD3D11Project\FX\Lights.fx"
                mov r3.xyz, -r3.xyzx  // r3.x <- lightDir.x; r3.y <- lightDir.y; r3.z <- lightDir.z
                
                #line 56
                dp3 r0.w, r3.xyzx, r1.xyzx  // r0.w <- diffuseFactor
                
                #line 58
                mul r5.xyz, r5.xyzx, r8.xyzx
                itof r1.w, l(0)
                max r1.w, r0.w, r1.w
                mul r5.xyz, r1.wwww, r5.xyzx
                mul r5.xyz, r10.xyzx, r5.xyzx  // r5.x <- diffuse.x; r5.y <- diffuse.y; r5.z <- diffuse.z
                
                #line 59
                mul r4.xyz, r4.xyzx, r7.xyzx  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z
                
                #line 61
                mov r1.w, l(0.100000)
                add r2.w, r1.w, l(0.100000)
                add r0.w, r0.w, r1.w
                div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
                mul r0.w, r0.w, r1.w
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)
                mul r1.w, r0.w, l(-2.000000)
                add r1.w, r1.w, l(3.000000)
                mul r0.w, r0.w, r0.w
                mul r0.w, r0.w, r1.w  // r0.w <- hasSpec
                
                #line 62
                mov r3.xyz, -r3.xyzx
                dp3 r1.w, r3.xyzx, r1.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r1.xyz, r1.wwww, r1.xyzx
                add r1.xyz, r3.xyzx, r1.xyzx
                dp3 r1.x, r1.xyzx, r2.xyzx
                itof r1.y, l(0)
                max r1.x, r1.y, r1.x
                log r1.x, r1.x
                mul r1.x, r1.x, r9.w
                exp r1.x, r1.x  // r1.x <- specFactor
                
                #line 63
                mul r1.yzw, r6.xxyz, r9.xxyz
                mul r1.xyz, r1.xxxx, r1.yzwy
                mul r1.xyz, r0.wwww, r1.xyzx  // r1.x <- specular.x; r1.y <- specular.y; r1.z <- specular.z
                
                #line 81 "D:\Projects\LearningDoc\MyD3D11Project\MyD3D11Project\FX\RotateFlame.fx"
                mov r5.xyz, r5.xyzx  // r5.x <- diffuse.x; r5.y <- diffuse.y; r5.z <- diffuse.z
                mov r1.xyz, r1.xyzx  // r1.x <- specular.x; r1.y <- specular.y; r1.z <- specular.z
                mov r4.xyz, r4.xyzx  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z
                
                #line 83
                add r2.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z
                
                #line 84
                mov r0.w, cb1[17].w  // r0.w <- litColor.w
                
                #line 85
                mov o0.xyz, r0.xyzx
                mov o0.w, r0.w
                ret 
                // Approximately 68 instruction slots used
                            
            };
        }

    }

    technique11 LightTech_Lit_NoTex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWVP;                     // Offset:    0 Size:    64
                //   float4x4 gWorld;                   // Offset:   64 Size:    64
                //   float4x4 gWorldNormal;             // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  256
                //       float4 diffuse;                // Offset:  272
                //       float4 specular;               // Offset:  288
                //
                //   } gMaterial;                       // Offset:  256 Size:    48 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerObject                       cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // COLOR                    0   xyzw        3     NONE   float   xyzw
                // TEXCOORD                 0   xy          4     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyzw
                dcl_output o4.xy
                dcl_temps 6
                //
                // Initial variable locations:
                //   v0.x <- vin.posL.x; v0.y <- vin.posL.y; v0.z <- vin.posL.z; 
                //   v1.x <- vin.normalL.x; v1.y <- vin.normalL.y; v1.z <- vin.normalL.z; 
                //   v2.x <- vin.texcoord.x; v2.y <- vin.texcoord.y; 
                //   o4.x <- <VS return value>.tex.x; o4.y <- <VS return value>.tex.y; 
                //   o3.x <- <VS return value>.color.x; o3.y <- <VS return value>.color.y; o3.z <- <VS return value>.color.z; o3.w <- <VS return value>.color.w; 
                //   o2.x <- <VS return value>.normalW.x; o2.y <- <VS return value>.normalW.y; o2.z <- <VS return value>.normalW.z; 
                //   o1.x <- <VS return value>.posW.x; o1.y <- <VS return value>.posW.y; o1.z <- <VS return value>.posW.z; 
                //   o0.x <- <VS return value>.posH.x; o0.y <- <VS return value>.posH.y; o0.z <- <VS return value>.posH.z; o0.w <- <VS return value>.posH.w
                //
                #line 51 "D:\Projects\LearningDoc\MyD3D11Project\MyD3D11Project\FX\RotateFlame.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.posH.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.posH.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.posH.z
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // r1.w <- vout.posH.w
                
                #line 52
                dp4 r2.x, r0.xyzw, cb0[4].xyzw  // r2.x <- vout.posW.x
                dp4 r2.y, r0.xyzw, cb0[5].xyzw  // r2.y <- vout.posW.y
                dp4 r2.z, r0.xyzw, cb0[6].xyzw  // r2.z <- vout.posW.z
                
                #line 53
                dp3 r0.x, v1.xyzx, cb0[8].xyzx  // r0.x <- vout.normalW.x
                dp3 r0.y, v1.xyzx, cb0[9].xyzx  // r0.y <- vout.normalW.y
                dp3 r0.z, v1.xyzx, cb0[10].xyzx  // r0.z <- vout.normalW.z
                
                #line 54
                mov r3.xyz, v1.xyzx  // r3.x <- vout.color.x; r3.y <- vout.color.y; r3.z <- vout.color.z
                mov r3.w, l(1.000000)  // r3.w <- vout.color.w
                
                #line 55
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // r5.x <- vout.tex.x
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // r5.y <- vout.tex.y
                
                #line 57
                mov o0.xyzw, r1.xyzw
                mov o3.xyzw, r3.xyzw
                mov o1.xyz, r2.xyzx
                mov o2.xyz, r0.xyzx
                mov o4.xy, r5.xyxx
                ret 
                // Approximately 24 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float3 direction;              // Offset:    0
                //       float pad;                     // Offset:   12
                //       float4 ambientColor;           // Offset:   16
                //       float4 diffuseColor;           // Offset:   32
                //       float4 specularColor;          // Offset:   48
                //
                //   } gDirectLight;                    // Offset:    0 Size:    64
                //   float3 gCameraPosW;                // Offset:   64 Size:    12
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWVP;                     // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorld;                   // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldNormal;             // Offset:  128 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  256
                //       float4 diffuse;                // Offset:  272
                //       float4 specular;               // Offset:  288
                //
                //   } gMaterial;                       // Offset:  256 Size:    48
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerFrame                        cbuffer      NA          NA            cb0      1 
                // cbPerObject                       cbuffer      NA          NA            cb1      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // COLOR                    0   xyzw        3     NONE   float       
                // TEXCOORD                 0   xy          4     NONE   float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[5], immediateIndexed
                dcl_constantbuffer CB1[19], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 11
                //
                // Initial variable locations:
                //   v0.x <- v2p.posH.x; v0.y <- v2p.posH.y; v0.z <- v2p.posH.z; v0.w <- v2p.posH.w; 
                //   v1.x <- v2p.posW.x; v1.y <- v2p.posW.y; v1.z <- v2p.posW.z; 
                //   v2.x <- v2p.normalW.x; v2.y <- v2p.normalW.y; v2.z <- v2p.normalW.z; 
                //   v3.x <- v2p.color.x; v3.y <- v2p.color.y; v3.z <- v2p.color.z; v3.w <- v2p.color.w; 
                //   v4.x <- v2p.tex.x; v4.y <- v2p.tex.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 63 "D:\Projects\LearningDoc\MyD3D11Project\MyD3D11Project\FX\RotateFlame.fx"
                mov r0.xyz, l(1.000000,1.000000,1.000000,0)  // r0.x <- texCol.x; r0.y <- texCol.y; r0.z <- texCol.z
                
                #line 74
                dp3 r0.w, v2.xyzx, v2.xyzx
                rsq r0.w, r0.w
                mul r1.xyz, r0.wwww, v2.xyzx  // r1.x <- v2p.normalW.x; r1.y <- v2p.normalW.y; r1.z <- v2p.normalW.z
                
                #line 75
                mov r2.xyz, -v1.xyzx
                add r2.xyz, r2.xyzx, cb0[4].xyzx
                dp3 r0.w, r2.xyzx, r2.xyzx
                rsq r0.w, r0.w
                mul r2.xyz, r0.wwww, r2.xyzx  // r2.x <- viewW.x; r2.y <- viewW.y; r2.z <- viewW.z
                
                #line 81
                nop 
                mov r3.xyz, cb0[0].xyzx
                mov r4.xyz, cb0[1].xyzx
                mov r5.xyz, cb0[2].xyzx
                mov r6.xyz, cb0[3].xyzx
                mov r7.xyz, cb1[16].xyzx
                mov r8.xyz, cb1[17].xyzx
                mov r9.xyzw, cb1[18].xyzw
                mov r10.xyz, l(1.000000,1.000000,1.000000,0)
                mov r1.xyz, r1.xyzx
                mov r2.xyz, r2.xyzx
                
                #line 55 "D:\Projects\LearningDoc\MyD3D11Project\MyD3D11Project\FX\Lights.fx"
                mov r3.xyz, -r3.xyzx  // r3.x <- lightDir.x; r3.y <- lightDir.y; r3.z <- lightDir.z
                
                #line 56
                dp3 r0.w, r3.xyzx, r1.xyzx  // r0.w <- diffuseFactor
                
                #line 58
                mul r5.xyz, r5.xyzx, r8.xyzx
                itof r1.w, l(0)
                max r1.w, r0.w, r1.w
                mul r5.xyz, r1.wwww, r5.xyzx
                mul r5.xyz, r10.xyzx, r5.xyzx  // r5.x <- diffuse.x; r5.y <- diffuse.y; r5.z <- diffuse.z
                
                #line 59
                mul r4.xyz, r4.xyzx, r7.xyzx  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z
                
                #line 61
                mov r1.w, l(0.100000)
                add r2.w, r1.w, l(0.100000)
                add r0.w, r0.w, r1.w
                div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
                mul r0.w, r0.w, r1.w
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)
                mul r1.w, r0.w, l(-2.000000)
                add r1.w, r1.w, l(3.000000)
                mul r0.w, r0.w, r0.w
                mul r0.w, r0.w, r1.w  // r0.w <- hasSpec
                
                #line 62
                mov r3.xyz, -r3.xyzx
                dp3 r1.w, r3.xyzx, r1.xyzx
                add r1.w, r1.w, r1.w
                mov r1.w, -r1.w
                mul r1.xyz, r1.wwww, r1.xyzx
                add r1.xyz, r3.xyzx, r1.xyzx
                dp3 r1.x, r1.xyzx, r2.xyzx
                itof r1.y, l(0)
                max r1.x, r1.y, r1.x
                log r1.x, r1.x
                mul r1.x, r1.x, r9.w
                exp r1.x, r1.x  // r1.x <- specFactor
                
                #line 63
                mul r1.yzw, r6.xxyz, r9.xxyz
                mul r1.xyz, r1.xxxx, r1.yzwy
                mul r1.xyz, r0.wwww, r1.xyzx  // r1.x <- specular.x; r1.y <- specular.y; r1.z <- specular.z
                
                #line 81 "D:\Projects\LearningDoc\MyD3D11Project\MyD3D11Project\FX\RotateFlame.fx"
                mov r5.xyz, r5.xyzx  // r5.x <- diffuse.x; r5.y <- diffuse.y; r5.z <- diffuse.z
                mov r1.xyz, r1.xyzx  // r1.x <- specular.x; r1.y <- specular.y; r1.z <- specular.z
                mov r4.xyz, r4.xyzx  // r4.x <- ambient.x; r4.y <- ambient.y; r4.z <- ambient.z
                
                #line 83
                add r2.xyz, r4.xyzx, r5.xyzx
                mul r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // r0.x <- litColor.x; r0.y <- litColor.y; r0.z <- litColor.z
                
                #line 84
                mov r0.w, cb1[17].w  // r0.w <- litColor.w
                
                #line 85
                mov o0.xyz, r0.xyzx
                mov o0.w, r0.w
                ret 
                // Approximately 64 instruction slots used
                            
            };
        }

    }

    technique11 LightTech_Unlit_Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWVP;                     // Offset:    0 Size:    64
                //   float4x4 gWorld;                   // Offset:   64 Size:    64
                //   float4x4 gWorldNormal;             // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  256
                //       float4 diffuse;                // Offset:  272
                //       float4 specular;               // Offset:  288
                //
                //   } gMaterial;                       // Offset:  256 Size:    48 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerObject                       cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // COLOR                    0   xyzw        3     NONE   float   xyzw
                // TEXCOORD                 0   xy          4     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyzw
                dcl_output o4.xy
                dcl_temps 6
                //
                // Initial variable locations:
                //   v0.x <- vin.posL.x; v0.y <- vin.posL.y; v0.z <- vin.posL.z; 
                //   v1.x <- vin.normalL.x; v1.y <- vin.normalL.y; v1.z <- vin.normalL.z; 
                //   v2.x <- vin.texcoord.x; v2.y <- vin.texcoord.y; 
                //   o4.x <- <VS return value>.tex.x; o4.y <- <VS return value>.tex.y; 
                //   o3.x <- <VS return value>.color.x; o3.y <- <VS return value>.color.y; o3.z <- <VS return value>.color.z; o3.w <- <VS return value>.color.w; 
                //   o2.x <- <VS return value>.normalW.x; o2.y <- <VS return value>.normalW.y; o2.z <- <VS return value>.normalW.z; 
                //   o1.x <- <VS return value>.posW.x; o1.y <- <VS return value>.posW.y; o1.z <- <VS return value>.posW.z; 
                //   o0.x <- <VS return value>.posH.x; o0.y <- <VS return value>.posH.y; o0.z <- <VS return value>.posH.z; o0.w <- <VS return value>.posH.w
                //
                #line 51 "D:\Projects\LearningDoc\MyD3D11Project\MyD3D11Project\FX\RotateFlame.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.posH.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.posH.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.posH.z
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // r1.w <- vout.posH.w
                
                #line 52
                dp4 r2.x, r0.xyzw, cb0[4].xyzw  // r2.x <- vout.posW.x
                dp4 r2.y, r0.xyzw, cb0[5].xyzw  // r2.y <- vout.posW.y
                dp4 r2.z, r0.xyzw, cb0[6].xyzw  // r2.z <- vout.posW.z
                
                #line 53
                dp3 r0.x, v1.xyzx, cb0[8].xyzx  // r0.x <- vout.normalW.x
                dp3 r0.y, v1.xyzx, cb0[9].xyzx  // r0.y <- vout.normalW.y
                dp3 r0.z, v1.xyzx, cb0[10].xyzx  // r0.z <- vout.normalW.z
                
                #line 54
                mov r3.xyz, v1.xyzx  // r3.x <- vout.color.x; r3.y <- vout.color.y; r3.z <- vout.color.z
                mov r3.w, l(1.000000)  // r3.w <- vout.color.w
                
                #line 55
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // r5.x <- vout.tex.x
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // r5.y <- vout.tex.y
                
                #line 57
                mov o0.xyzw, r1.xyzw
                mov o3.xyzw, r3.xyzw
                mov o1.xyz, r2.xyzx
                mov o2.xyz, r0.xyzx
                mov o4.xy, r5.xyxx
                ret 
                // Approximately 24 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // linearSampler                     sampler      NA          NA             s0      1 
                // diffuseTex                        texture  float4          2d             t0      1 
                // diffuseAlphaTex                   texture  float4          2d             t1      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float       
                // NORMAL                   0   xyz         2     NONE   float       
                // COLOR                    0   xyzw        3     NONE   float   xyzw
                // TEXCOORD                 0   xy          4     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v3.xyzw
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- v2p.posH.x; v0.y <- v2p.posH.y; v0.z <- v2p.posH.z; v0.w <- v2p.posH.w; 
                //   v1.x <- v2p.posW.x; v1.y <- v2p.posW.y; v1.z <- v2p.posW.z; 
                //   v2.x <- v2p.normalW.x; v2.y <- v2p.normalW.y; v2.z <- v2p.normalW.z; 
                //   v3.x <- v2p.color.x; v3.y <- v2p.color.y; v3.z <- v2p.color.z; v3.w <- v2p.color.w; 
                //   v4.x <- v2p.tex.x; v4.y <- v2p.tex.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 67 "D:\Projects\LearningDoc\MyD3D11Project\MyD3D11Project\FX\RotateFlame.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v4.xyxx, t0.xyzw, s0  // r0.x <- texCol.x; r0.y <- texCol.y; r0.z <- texCol.z; r0.w <- texCol.w
                
                #line 68
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v4.xyxx, t1.xyzw, s0  // r1.x <- texAlphaCol.x; r1.y <- texAlphaCol.y; r1.z <- texAlphaCol.z; r1.w <- texAlphaCol.w
                
                #line 69
                mul r0.xyzw, r0.xyzw, r1.xyzw
                
                #line 88
                mul o0.xyzw, r0.xyzw, v3.xyzw
                ret 
                // Approximately 5 instruction slots used
                            
            };
        }

    }

    technique11 LightTech_Unlit_NoTex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWVP;                     // Offset:    0 Size:    64
                //   float4x4 gWorld;                   // Offset:   64 Size:    64
                //   float4x4 gWorldNormal;             // Offset:  128 Size:    64
                //   float4x4 gTexTransform;            // Offset:  192 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  256
                //       float4 diffuse;                // Offset:  272
                //       float4 specular;               // Offset:  288
                //
                //   } gMaterial;                       // Offset:  256 Size:    48 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerObject                       cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // NORMAL                   0   xyz         1     NONE   float   xyz 
                // TEXCOORD                 0   xy          2     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // POSITION                 0   xyz         1     NONE   float   xyz 
                // NORMAL                   0   xyz         2     NONE   float   xyz 
                // COLOR                    0   xyzw        3     NONE   float   xyzw
                // TEXCOORD                 0   xy          4     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyzw
                dcl_output o4.xy
                dcl_temps 6
                //
                // Initial variable locations:
                //   v0.x <- vin.posL.x; v0.y <- vin.posL.y; v0.z <- vin.posL.z; 
                //   v1.x <- vin.normalL.x; v1.y <- vin.normalL.y; v1.z <- vin.normalL.z; 
                //   v2.x <- vin.texcoord.x; v2.y <- vin.texcoord.y; 
                //   o4.x <- <VS return value>.tex.x; o4.y <- <VS return value>.tex.y; 
                //   o3.x <- <VS return value>.color.x; o3.y <- <VS return value>.color.y; o3.z <- <VS return value>.color.z; o3.w <- <VS return value>.color.w; 
                //   o2.x <- <VS return value>.normalW.x; o2.y <- <VS return value>.normalW.y; o2.z <- <VS return value>.normalW.z; 
                //   o1.x <- <VS return value>.posW.x; o1.y <- <VS return value>.posW.y; o1.z <- <VS return value>.posW.z; 
                //   o0.x <- <VS return value>.posH.x; o0.y <- <VS return value>.posH.y; o0.z <- <VS return value>.posH.z; o0.w <- <VS return value>.posH.w
                //
                #line 51 "D:\Projects\LearningDoc\MyD3D11Project\MyD3D11Project\FX\RotateFlame.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // r1.x <- vout.posH.x
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // r1.y <- vout.posH.y
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // r1.z <- vout.posH.z
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // r1.w <- vout.posH.w
                
                #line 52
                dp4 r2.x, r0.xyzw, cb0[4].xyzw  // r2.x <- vout.posW.x
                dp4 r2.y, r0.xyzw, cb0[5].xyzw  // r2.y <- vout.posW.y
                dp4 r2.z, r0.xyzw, cb0[6].xyzw  // r2.z <- vout.posW.z
                
                #line 53
                dp3 r0.x, v1.xyzx, cb0[8].xyzx  // r0.x <- vout.normalW.x
                dp3 r0.y, v1.xyzx, cb0[9].xyzx  // r0.y <- vout.normalW.y
                dp3 r0.z, v1.xyzx, cb0[10].xyzx  // r0.z <- vout.normalW.z
                
                #line 54
                mov r3.xyz, v1.xyzx  // r3.x <- vout.color.x; r3.y <- vout.color.y; r3.z <- vout.color.z
                mov r3.w, l(1.000000)  // r3.w <- vout.color.w
                
                #line 55
                mov r4.xy, v2.xyxx
                mov r4.zw, l(0,0,0,1.000000)
                dp4 r5.x, r4.xyzw, cb0[12].xyzw  // r5.x <- vout.tex.x
                dp4 r5.y, r4.xyzw, cb0[13].xyzw  // r5.y <- vout.tex.y
                
                #line 57
                mov o0.xyzw, r1.xyzw
                mov o3.xyzw, r3.xyzw
                mov o1.xyz, r2.xyzx
                mov o2.xyz, r0.xyzx
                mov o4.xy, r5.xyxx
                ret 
                // Approximately 24 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // POSITION                 0   xyz         1     NONE   float       
                // NORMAL                   0   xyz         2     NONE   float       
                // COLOR                    0   xyzw        3     NONE   float   xyzw
                // TEXCOORD                 0   xy          4     NONE   float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_input_ps linear v3.xyzw
                dcl_output o0.xyzw
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- v2p.posH.x; v0.y <- v2p.posH.y; v0.z <- v2p.posH.z; v0.w <- v2p.posH.w; 
                //   v1.x <- v2p.posW.x; v1.y <- v2p.posW.y; v1.z <- v2p.posW.z; 
                //   v2.x <- v2p.normalW.x; v2.y <- v2p.normalW.y; v2.z <- v2p.normalW.z; 
                //   v3.x <- v2p.color.x; v3.y <- v2p.color.y; v3.z <- v2p.color.z; v3.w <- v2p.color.w; 
                //   v4.x <- v2p.tex.x; v4.y <- v2p.tex.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 63 "D:\Projects\LearningDoc\MyD3D11Project\MyD3D11Project\FX\RotateFlame.fx"
                mov r0.xyzw, l(1.000000,1.000000,1.000000,1.000000)  // r0.x <- texCol.x; r0.y <- texCol.y; r0.z <- texCol.z; r0.w <- texCol.w
                
                #line 88
                mul o0.xyzw, r0.xyzw, v3.xyzw
                ret 
                // Approximately 3 instruction slots used
                            
            };
        }

    }

}

