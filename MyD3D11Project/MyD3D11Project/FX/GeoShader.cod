//
// FX Version: fx_5_0
//
// 3 local buffer(s)
//
cbuffer cbPerFrame
{
    float3  gCameraPosW;                // Offset:    0, size:   12
    float3  gCameraUpW;                 // Offset:   16, size:   12
}

cbuffer cbPerObject
{
    float4x4 gVP;                       // Offset:    0, size:   64
    float4x4 gWorld;                    // Offset:   64, size:   64
    float4x4 gTexTransform;             // Offset:  128, size:   64
    Material gMaterial;                 // Offset:  192, size:   48
}

cbuffer cbFixed
{
    float2  fixedUV[4] = { 0, 1, 0, 0, 1, 1, 1, 0 };// Offset:    0, size:   56
}

//
// 2 local object(s)
//
Texture2D diffuseTex;
SamplerState linearSampler
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 GeoTech_Tex
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gVP;                      // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorld;                   // Offset:   64 Size:    64
                //   float4x4 gTexTransform;            // Offset:  128 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  192
                //       float4 diffuse;                // Offset:  208
                //       float4 specular;               // Offset:  224
                //
                //   } gMaterial;                       // Offset:  192 Size:    48 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerObject                       cbuffer      NA          NA            cb0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SIZE                     0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SIZE                     0   xy          1     NONE   float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[7], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output o0.xyz
                dcl_output o1.xy
                dcl_temps 2
                //
                // Initial variable locations:
                //   v0.x <- vin.centerL.x; v0.y <- vin.centerL.y; v0.z <- vin.centerL.z; 
                //   v1.x <- vin.size.x; v1.y <- vin.size.y; 
                //   o1.x <- <VS return value>.size.x; o1.y <- <VS return value>.size.y; 
                //   o0.x <- <VS return value>.centerW.x; o0.y <- <VS return value>.centerW.y; o0.z <- <VS return value>.centerW.z
                //
                #line 61 "D:\Projects\LearningDoc\MyD3D11Project\MyD3D11Project\FX\GeoShader.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[4].xyzw  // r1.x <- vout.centerW.x
                dp4 r1.y, r0.xyzw, cb0[5].xyzw  // r1.y <- vout.centerW.y
                dp4 r1.z, r0.xyzw, cb0[6].xyzw  // r1.z <- vout.centerW.z
                
                #line 62
                mov r0.xy, v1.xyxx  // r0.x <- vout.size.x; r0.y <- vout.size.y
                
                #line 64
                mov o0.xyz, r1.xyzx
                mov o1.xy, r0.xyxx
                ret 
                // Approximately 9 instruction slots used
                            
            };
            GeometryShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   float3 gCameraPosW;                // Offset:    0 Size:    12
                //   float3 gCameraUpW;                 // Offset:   16 Size:    12
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gVP;                      // Offset:    0 Size:    64
                //   float4x4 gWorld;                   // Offset:   64 Size:    64 [unused]
                //   float4x4 gTexTransform;            // Offset:  128 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 ambient;                // Offset:  192
                //       float4 diffuse;                // Offset:  208
                //       float4 specular;               // Offset:  224
                //
                //   } gMaterial;                       // Offset:  192 Size:    48 [unused]
                //
                // }
                //
                // cbuffer cbFixed
                // {
                //
                //   float2 fixedUV[4];                 // Offset:    0 Size:    56
                //      = 0x00000000 0x3f800000 0x00000000 0x00000000 
                //        0x00000000 0x00000000 0x00000000 0x00000000 
                //        0x3f800000 0x3f800000 0x00000000 0x00000000 
                //        0x3f800000 0x00000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // cbPerFrame                        cbuffer      NA          NA            cb0      1 
                // cbPerObject                       cbuffer      NA          NA            cb1      1 
                // cbFixed                           cbuffer      NA          NA            cb2      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // POSITION                 0   xyz         0     NONE   float   xyz 
                // SIZE                     0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float   xyzw
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                gs_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_constantbuffer CB0[2], immediateIndexed
                dcl_constantbuffer CB1[10], immediateIndexed
                dcl_constantbuffer CB2[4], immediateIndexed
                dcl_input v[1][0].xyz
                dcl_input v[1][1].xy
                dcl_temps 4
                dcl_indexableTemp x0[4], 4
                dcl_inputprimitive point 
                dcl_stream m0
                dcl_outputtopology trianglestrip 
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_maxout 4
                //
                // Initial variable locations:
                //   m0 <- triStream; 
                //   v[0][0].x <- v2g[0].centerW.x; v[0][0].y <- v2g[0].centerW.y; v[0][0].z <- v2g[0].centerW.z; 
                //   v[0][1].x <- v2g[0].size.x; v[0][1].y <- v2g[0].size.y; 
                //   x0 <- pointsW
                //
                #line 71 "D:\Projects\LearningDoc\MyD3D11Project\MyD3D11Project\FX\GeoShader.fx"
                mov r0.xyz, cb0[1].xyzx  // r0.x <- up.x; r0.y <- up.y; r0.z <- up.z
                
                #line 72
                mov r1.xyz, -v[0][0].yzxy
                add r1.xyz, r1.xyzx, cb0[0].yzxy
                dp3 r0.w, r1.xyzx, r1.xyzx
                rsq r0.w, r0.w
                mul r1.xyz, r0.wwww, r1.xyzx  // r1.x <- look.y; r1.y <- look.z; r1.z <- look.x
                
                #line 73
                mul r2.xyz, r0.yzxy, r1.yzxy
                mul r1.xyz, r0.zxyz, r1.xyzx
                mov r1.xyz, -r1.xyzx
                add r1.xyz, r1.xyzx, r2.xyzx  // r1.x <- right.x; r1.y <- right.y; r1.z <- right.z
                
                #line 75
                mul r0.w, l(0.500000), v[0][1].x  // r0.w <- halfWidth
                
                #line 76
                mul r1.w, l(0.500000), v[0][1].y  // r1.w <- halfHeight
                
                #line 82
                mul r2.xyz, r1.xyzx, r0.wwww
                add r2.xyz, r2.xyzx, v[0][0].xyzx
                mul r3.xyz, r0.xyzx, r1.wwww
                add r2.xyz, r2.xyzx, r3.xyzx
                mov r2.w, l(1.000000)
                mov x0[0].xyzw, r2.xyzw
                
                #line 83
                mul r2.xyz, r1.xyzx, r0.wwww
                mov r2.xyz, -r2.xyzx
                add r2.xyz, r2.xyzx, v[0][0].xyzx
                mul r3.xyz, r0.xyzx, r1.wwww
                add r2.xyz, r2.xyzx, r3.xyzx
                mov r2.w, l(1.000000)
                mov x0[1].xyzw, r2.xyzw
                
                #line 84
                mul r2.xyz, r1.xyzx, r0.wwww
                add r2.xyz, r2.xyzx, v[0][0].xyzx
                mul r3.xyz, r0.xyzx, r1.wwww
                mov r3.xyz, -r3.xyzx
                add r2.xyz, r2.xyzx, r3.xyzx
                mov r2.w, l(1.000000)
                mov x0[2].xyzw, r2.xyzw
                
                #line 85
                mul r1.xyz, r1.xyzx, r0.wwww
                mov r1.xyz, -r1.xyzx
                add r1.xyz, r1.xyzx, v[0][0].xyzx
                mul r0.xyz, r0.xyzx, r1.wwww
                mov r0.xyz, -r0.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx
                mov r0.w, l(1.000000)
                mov x0[3].xyzw, r0.xyzw
                
                #line 91
                mov r0.xyzw, x0[0].xyzw
                dp4 r1.x, r0.xyzw, cb1[0].xyzw  // r1.x <- gOut.posH.x
                dp4 r1.y, r0.xyzw, cb1[1].xyzw  // r1.y <- gOut.posH.y
                dp4 r1.z, r0.xyzw, cb1[2].xyzw  // r1.z <- gOut.posH.z
                dp4 r1.w, r0.xyzw, cb1[3].xyzw  // r1.w <- gOut.posH.w
                
                #line 92
                mov r0.xy, cb2[0].xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r2.x, r0.xyzw, cb1[8].xyzw  // r2.x <- gOut.tex.x
                dp4 r2.y, r0.xyzw, cb1[9].xyzw  // r2.y <- gOut.tex.y
                
                #line 94
                mov o0.xyzw, r1.xyzw
                mov o1.xy, r2.xyxx
                emit_stream m0
                
                #line 91
                mov r0.xyzw, x0[1].xyzw
                dp4 r1.x, r0.xyzw, cb1[0].xyzw
                dp4 r1.y, r0.xyzw, cb1[1].xyzw
                dp4 r1.z, r0.xyzw, cb1[2].xyzw
                dp4 r1.w, r0.xyzw, cb1[3].xyzw
                
                #line 92
                mov r0.xy, cb2[1].xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r2.x, r0.xyzw, cb1[8].xyzw
                dp4 r2.y, r0.xyzw, cb1[9].xyzw
                
                #line 94
                mov o0.xyzw, r1.xyzw
                mov o1.xy, r2.xyxx
                emit_stream m0
                
                #line 91
                mov r0.xyzw, x0[2].xyzw
                dp4 r1.x, r0.xyzw, cb1[0].xyzw
                dp4 r1.y, r0.xyzw, cb1[1].xyzw
                dp4 r1.z, r0.xyzw, cb1[2].xyzw
                dp4 r1.w, r0.xyzw, cb1[3].xyzw
                
                #line 92
                mov r0.xy, cb2[2].xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r2.x, r0.xyzw, cb1[8].xyzw
                dp4 r2.y, r0.xyzw, cb1[9].xyzw
                
                #line 94
                mov o0.xyzw, r1.xyzw
                mov o1.xy, r2.xyxx
                emit_stream m0
                
                #line 91
                mov r0.xyzw, x0[3].xyzw
                dp4 r1.x, r0.xyzw, cb1[0].xyzw
                dp4 r1.y, r0.xyzw, cb1[1].xyzw
                dp4 r1.z, r0.xyzw, cb1[2].xyzw
                dp4 r1.w, r0.xyzw, cb1[3].xyzw
                
                #line 92
                mov r0.xy, cb2[3].xyxx
                mov r0.zw, l(0,0,0,1.000000)
                dp4 r2.x, r0.xyzw, cb1[8].xyzw
                dp4 r2.y, r0.xyzw, cb1[9].xyzw
                
                #line 94
                mov o0.xyzw, r1.xyzw
                mov o1.xy, r2.xyxx
                emit_stream m0
                
                #line 96
                ret 
                // Approximately 89 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 10.1
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim      HLSL Bind  Count
                // ------------------------------ ---------- ------- ----------- -------------- ------
                // linearSampler                     sampler      NA          NA             s0      1 
                // diffuseTex                        texture  float4          2d             t0      1 
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_POSITION              0   xyzw        0      POS   float       
                // TEXCOORD                 0   xy          1     NONE   float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue  Format   Used
                // -------------------- ----- ------ -------- -------- ------- ------
                // SV_Target                0   xyzw        0   TARGET   float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed | skipOptimization
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xy
                dcl_output o0.xyzw
                dcl_temps 1
                //
                // Initial variable locations:
                //   v0.x <- g2p.posH.x; v0.y <- g2p.posH.y; v0.z <- g2p.posH.z; v0.w <- g2p.posH.w; 
                //   v1.x <- g2p.tex.x; v1.y <- g2p.tex.y; 
                //   o0.x <- <PS return value>.x; o0.y <- <PS return value>.y; o0.z <- <PS return value>.z; o0.w <- <PS return value>.w
                //
                #line 100 "D:\Projects\LearningDoc\MyD3D11Project\MyD3D11Project\FX\GeoShader.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0  // r0.x <- texCol.x; r0.y <- texCol.y; r0.z <- texCol.z; r0.w <- texCol.w
                
                #line 101
                mov o0.xyzw, r0.xyzw
                ret 
                // Approximately 3 instruction slots used
                            
            };
        }

    }

}

